generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mongodb"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  authId       String        @db.ObjectId
  role         Role          @default(USER)
  imageUrl     String?
  userName     String?
  cartProducts CartProduct[]
  reviews      Review[]
}

model Product {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  productTitle String
  image        String?
  price        Int
  status       Status?
  category     Category
  tag          Tag
  color        Color
  cartProduct  CartProduct[]
  review       Review[]
}

model Review {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  text      String
  date      DateTime @default(now())
  Product   Product  @relation(fields: [productId], references: [id])
  productId String   @db.ObjectId
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?  @db.ObjectId
}

model CartProduct {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  quantity   Int     @default(1)
  isSelected Boolean @default(false)
  product    Product @relation(fields: [productId], references: [id])
  productId  String  @db.ObjectId
  User       User    @relation(fields: [userId], references: [id])
  userId     String  @db.ObjectId
}

model Blog {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  postDate      DateTime @default(now())
  headline      String
  articleIntro  String
  articleBlocks Block[]
  thumbnail     String
  cover         String
  authorName    String
  authorImage   String
}

model Block {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  heading String
  text    String
  Blog    Blog   @relation(fields: [blogId], references: [id])
  blogId  String @db.ObjectId
}

model Testimonial {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  imageURL String
  headline String
  text     String
  location String
}

model TeamMember {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  imageURL String
  role     String
}

enum Role {
  USER
  ADMIN
}

enum Color {
  BLACK
  WHITE
  RED
  BROWN
  GREEN
}

enum Category {
  CHAIR
  TABLE
  LAMP
  DRAWAR
  BED
  BOOKSHELF
  SOFA
}

enum Tag {
  MINIMALISTIC
  MODERN
  STYLISH
  ELEGANT
  AMBIENT
  LUXURIOUS
}

enum Status {
  NEW
  POPULAR
  OUT_OF_STOCK
}
